version: '3.8'

services:
  # MySQL数据库服务
  mysql:
    image: mysql:8.0
    container_name: chat-gpt-demo-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: ds_test
      MYSQL_USER: ds_test
      MYSQL_PASSWORD: ds_test
      TZ: Asia/Shanghai
    ports:
      - "3307:3306"  # 避免与本地MySQL冲突
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/src/main/resources/db/migration:/docker-entrypoint-initdb.d
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    networks:
      - chat-gpt-demo-network

  # 后端服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: chat-gpt-demo-backend
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/ds_test?useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: ds_test
      SPRING_DATASOURCE_PASSWORD: ds_test
      DEEPSEEK_API_KEY: ${DEEPSEEK_API_KEY:-sk-93432e44cb8545a78ebc85b718157109}
      SERVER_PORT: 8092
      TZ: Asia/Shanghai
    ports:
      - "8092:8092"
    volumes:
      - ./logs:/app/logs
      - ./backend/documents:/app/documents
    depends_on:
      - mysql
    restart: unless-stopped
    networks:
      - chat-gpt-demo-network

  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: chat-gpt-demo-frontend
    ports:
      - "3003:3003"
    volumes:
      - ./logs/nginx:/var/log/nginx
    environment:
      TZ: Asia/Shanghai
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - chat-gpt-demo-network

volumes:
  mysql_data:
    driver: local

networks:
  chat-gpt-demo-network:
    driver: bridge 